name: Deploy Backend to Dev and Trigger Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'data/**' # Also trigger if the data template changes
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: "Terraform Apply and Trigger Frontend"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::456202167790:role/githubaction
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1
          
      - name: Terraform Init
        run: terraform init
        working-directory: ./backend/environments/dev

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./backend/environments/dev

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./backend/environments/dev

      
      # It uses heredoc syntax to correctly handle the multi-line JSON output from Terraform.
      - name: Get Terraform Outputs
        id: terraform_output
        run: |
          {
            echo 'json_output<<EOF'
            terraform output -json
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"
        working-directory: ./backend/environments/dev

      - name: Seed DynamoDB Table
        env:
          TABLE_NAME: ${{ fromJson(steps.terraform_output.outputs.json_output).dynamodb_table_name.value }}
        run: |
          echo "Starting database seed for table: $TABLE_NAME"
          chmod +x ./data/seed_database.sh
          ./data/seed_database.sh "$TABLE_NAME"

      - name: Look up Amplify App ID
        id: lookup_app_id
        run: |
          APP_ID=$(aws amplify list-apps | jq -r '.apps[] | select(.name == "Project-9-intermediate-level-Cloud-Dictionary-App") | .appId')
          echo "Found Amplify App ID: $APP_ID"
          echo "app_id=$APP_ID" >> $GITHUB_OUTPUT

      - name: Update Amplify Environment Variable
        env:
          API_URL: ${{ fromJson(steps.terraform_output.outputs.json_output).api_invoke_url.value }}
          APP_ID: ${{ steps.lookup_app_id.outputs.app_id }}
        run: |
          echo "Updating Amplify App ID: $APP_ID with URL: $API_URL"
          aws amplify update-app \
            --app-id "$APP_ID" \
            --environment-variables "VITE_API_URL=$API_URL"

      - name: Trigger Amplify Frontend Build
        env:
          APP_ID: ${{ steps.lookup_app_id.outputs.app_id }}
        run: |
          echo "Starting new build for Amplify App ID: $APP_ID"
          aws amplify start-job \
            --app-id "$APP_ID" \
            --branch-name main \
            --job-type 'RELEASE'